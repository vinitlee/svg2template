// Generated by CoffeeScript 1.8.0
(function() {
  var c, cancel, ctx, draw, imdim, img, imrate, imx;

  c = $('canvas.image')[0];

  ctx = c.getContext("2d");

  img = new Image();

  img.src = localStorage.getItem('image') || 'images/tycho.jpg';

  imrate = localStorage.getItem('rate') || 900;

  imx = localStorage.getItem('x') || 50;

  imdim = localStorage.getItem('dim') || 100;

  $('.bpm .rate').val(imrate);

  $('.size .x').val(imx);

  $('.dim .level').val(imdim);

  draw = function() {
    $(c).attr('width', imx);
    ctx.fillStyle = "#FF0000";
    ctx.fillRect(0, 0, c.width, 25);
    ctx.fillStyle = "#00FF00";
    ctx.fillRect(0, 25, c.width, 25);
    ctx.fillStyle = "#0000FF";
    ctx.fillRect(c.width / 2, 0, c.width, c.height);
    return ctx.drawImage(img, 0, 0, c.width, c.height);
  };

  draw();

  window.imgd = ctx.getImageData(0, 0, c.width, c.height);

  window.animate = function(x) {
    var column, y, _i, _ref;
    draw();
    column = '';
    for (y = _i = 0, _ref = c.height; _i <= _ref; y = _i += 1) {
      column += String.fromCharCode(Math.floor(ctx.getImageData(x, y, 1, 1).data[0] * 22 / 255 * imdim / 100) + 65);
      column += String.fromCharCode(Math.floor(ctx.getImageData(x, y, 1, 1).data[1] * 22 / 255 * imdim / 100) + 65);
      column += String.fromCharCode(Math.floor(ctx.getImageData(x, y, 1, 1).data[2] * 22 / 255 * imdim / 100) + 65);
    }
    column = column + ' ';
    socket.emit('frame', {
      column: column
    });
    return setTimeout((function() {
      return animate((x + 1) % c.width);
    }), Math.floor(60000 / imrate));
  };

  cancel = function(e) {
    if (e.preventDefault) {
      e.preventDefault();
    }
    return false;
  };

  $(window).bind('dragover', cancel).on('dragenter', cancel).on('drop', function(e) {
    var dt, file, reader;
    if (e == null) {
      e = window.event;
    }
    cancel(e);
    console.log(e);
    dt = e.originalEvent.dataTransfer;
    file = dt.files[0];
    reader = new FileReader();
    reader.onloadend = function() {
      localStorage.setItem('image', reader.result);
      img.src = reader.result;
      return $(img).ready(draw);
    };
    return reader.readAsDataURL(file);
  });

  $('.bpm .rate').blur(function() {
    imrate = parseInt($('.bpm .rate').val());
    imrate = Math.max(60, Math.min(2000, imrate));
    $('.bpm .rate').val(imrate);
    localStorage.setItem('rate', imrate);
    return draw();
  });

  $('.size .x').blur(function() {
    imx = parseInt($('.size .x').val());
    imx = Math.max(1, imx);
    $('.size .x').val(imx);
    localStorage.setItem('x', imx);
    return draw();
  });

  $('.dim .level').blur(function() {
    imdim = parseInt($('.dim .level').val());
    imdim = Math.max(0, Math.min(100, imdim));
    $('.dim .level').val(imdim);
    localStorage.setItem('dim', imdim);
    return draw();
  });

  $('.scrub').keydown(function(e) {
    console.log(e.which);
    if (e.which === 13) {
      console.log(this);
      $(this).focus();
      return $(this).blur();
    }
  });

}).call(this);
